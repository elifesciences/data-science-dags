version: '3.4'


x-pipeline-env:
  &pipeline-env
  - DEPLOYMENT_ENV=ci
  - GOOGLE_APPLICATION_CREDENTIALS=/root/.config/gcloud/credentials.json
  - DATA_SCIENCE_SOURCE_DATASET=${DATA_SCIENCE_SOURCE_DATASET}
  - DATA_SCIENCE_OUTPUT_DATASET=${DATA_SCIENCE_OUTPUT_DATASET}
  - DATA_SCIENCE_STATE_PATH=${DATA_SCIENCE_STATE_PATH}


services:

  jupyter:
    build:
      context: .
      dockerfile: Dockerfile.jupyter
    image: elifesciences/data-science-dags-jupyter:${IMAGE_TAG}
    command: start-notebook.sh --NotebookApp.token=''
    ports:
      - "${DATA_SCIENCE_DAGS_JUPYTER_PORT}:8888"
    volumes:
      # we need the notebooks mount to run the tests (since we don't copy them in)
      - ./notebooks:/home/jovyan/data-science-dags/notebooks
  
  data-science-pipelines:
    build:
      context: .
      dockerfile: Dockerfile.pipelines
    image: ${IMAGE_REPO}:${IMAGE_TAG}
    environment: *pipeline-env
    command: /bin/sh -c exit 0
    entrypoint: []

  data-science-pipelines-dev:
    environment:
      - DEPLOYMENT_ENV=ci
    build:
      context: .
      dockerfile: Dockerfile.pipelines
      args:
        install_dev: y
    image:  ${IMAGE_REPO}-dev:${IMAGE_TAG}
    command: /bin/sh -c exit 0
    entrypoint: []

  test-client:
    image: ${IMAGE_REPO}-dev:${IMAGE_TAG}
    environment: *pipeline-env
    command: >
      bash -c "./run_test.sh with-end-to-end"

  peerscout-api:
    build:
      context: .
      dockerfile: Dockerfile.peerscout_api
      target: runtime
    image: elifesciences/data-science-dags_peerscout-api:${IMAGE_TAG}
    environment:
      - PEERSCOUT_API_TARGET_DATASET=ci
      - PEERSCOUT_API_URL=http://peerscout-api:8080/api/peerscout
      - SPACY_KEYWORD_EXTRACTION_API_URL=https://spacy-keyword-extraction-api.elifesciences.org/v1/batch-extract-keywords
      - DATA_SCIENCE_STATE_PATH=${DATA_SCIENCE_STATE_PATH}

  peerscout-api-dev:
    build:
      context: .
      dockerfile: Dockerfile.peerscout_api
      target: dev
    image: elifesciences/data-science-dags_peerscout-api_dev:${IMAGE_TAG}
    environment: 
      - PEERSCOUT_API_URL=http://peerscout-api:8080/api/peerscout
 
  wait-for-it:
    image: willwill/wait-for-it

volumes:
  data:
